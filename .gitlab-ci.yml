# GitLab CI jobs for SDP Workflow library

variables:
  GIT_STRATEGY: clone

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH

stages:
  - test
  - build
  - publish

image: python:latest

# ============================================================================
# Test and lint Python package
# ============================================================================

test:
  stage: test
  before_script:
    - pip3 install -r requirements.txt -r requirements-test.txt
  script:
    - python3 setup.py test
  after_script:
    - mkdir -p build/reports
    - mv code-coverage.xml unit-tests.xml build/reports
  artifacts:
    paths:
      - build
    expire_in: 1 week
    when: always

lint:
  stage: test
  before_script:
    - pip3 install -r requirements.txt -r requirements-test.txt
    - pip3 install black
  script:
    - pylint --exit-zero --output-format=parseable src/ska_sdp_workflow
    - pylint --exit-zero --output-format=pylint2junit.JunitReporter src/ska_sdp_workflow > linting.xml
    - black --check . # fails if any of the code doesn't comply to black formatting
  after_script:
    - mkdir -p build/reports
    - mv linting.xml build/reports
  artifacts:
    paths:
      - build
    expire_in: 1 week
    when: always

docs:
  stage: test
  before_script:
    - pip3 install -r docs/requirements.txt
  script:
    - cd docs
    - make html
  artifacts:
    paths:
      - docs/build/html
    expire_in: 1 week
    when: always

# ============================================================================
# Build Python package
# ============================================================================

.build_python:
  stage: build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

# Executed on a non-master commit

build_dev:
  extends: .build_python
  except: [master]
  script:
    - python3 setup.py egg_info -b+dev.$CI_COMMIT_SHORT_SHA sdist bdist_wheel

# Executed on a master commit

build_release:
  extends: .build_python
  only: [master]
  script:
    - python3 setup.py sdist bdist_wheel

# ============================================================================
# Publish Python package (master only)
# ============================================================================

publish:
  stage: publish
  variables:
    TWINE_USERNAME: $TWINE_USERNAME
    TWINE_PASSWORD: $TWINE_PASSWORD
  before_script:
    - pip install twine
  script:
    - twine upload --repository-url $PYPI_REPOSITORY_URL dist/* || true
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == "master"


# ============================================================================
# CI metrics
# ============================================================================

# Create Gitlab CI badges from CI metrics
# https://developer.skatelescope.org/en/latest/tools/continuousintegration.html#automated-collection-of-ci-health-metrics-as-part-of-the-ci-pipeline
include:
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/post_step.yml'
